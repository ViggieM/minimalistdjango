---
export interface Props {
  pubDate: Date;
  updatedDate?: Date;
  tags?: string[];
  keywords?: string[];
}

const { pubDate, updatedDate, tags, keywords } = Astro.props;

function formatDate(date: Date): string {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<div class="article-meta border-l-4 border-blue-500 bg-gray-50 p-4 my-6">
  <div class="text-sm text-gray-600 space-y-2">
    <div class="flex items-center space-x-2">
      <span class="font-semibold">Posted:</span>
      <time datetime={pubDate.toISOString()}>{formatDate(pubDate)}</time>
    </div>
    
    {updatedDate && (
      <div class="flex items-center space-x-2">
        <span class="font-semibold">Updated:</span>
        <time datetime={updatedDate.toISOString()}>{formatDate(updatedDate)}</time>
      </div>
    )}
    
    {tags && tags.length > 0 && (
      <div class="flex flex-wrap items-center space-x-2">
        <span class="font-semibold">Tags:</span>
        <div class="flex flex-wrap gap-1">
          {tags.map((tag) => (
            <span class="inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">
              {tag}
            </span>
          ))}
        </div>
      </div>
    )}
    
    {keywords && keywords.length > 0 && (
      <div class="flex flex-wrap items-center space-x-2">
        <span class="font-semibold">Keywords:</span>
        <div class="flex flex-wrap gap-1">
          {keywords.map((keyword) => (
            <span class="inline-block bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">
              {keyword}
            </span>
          ))}
        </div>
      </div>
    )}
  </div>
</div>