---
import { getContentColor, getContentUrl } from '../utils/contentTypes';

const { post } = Astro.props;
const type = post.data.type;
const color = getContentColor(type);
const url = getContentUrl(type, post.id);
---

<article class="post relative">
  <header>
    <h3 class="mb-2">
      <a href={url} class="">
        <span class="absolute inset-0"></span>
        {post.data.title}</a
      >
    </h3>
    <div class="mb-1 flex items-baseline gap-2">
      <span class=`font-serif italic font-semibold text-sm ${color}`>{post.data.type}</span>
      <span class="text-xs italic">
        {
          post.data.updatedDate
            ? `updated on ${post.data.updatedDate.toLocaleString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}`
            : `posted on ${post.data.pubDate.toLocaleString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}`
        }
      </span>
    </div>
  </header>
  <div>
    {post.data.shortDescription}
  </div>
  <footer>
    {post.data.tags && (
      <div class="mt-2 flex gap-2"> 
        <span class="text-xs text-text-light">Tags:</span>
        {post.data.tags.map((tag: string) => (
          <span class="text-xs font-semibold text-[color:var(--color-text)]">{tag}</span>
        ))}
      </div>
    )}
  </footer>
</article>
